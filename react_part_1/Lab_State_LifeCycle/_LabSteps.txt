Lab: 元件的 state 與生命週期


1.  閱讀程式，設想新的解法


1.1 在瀏覽器檢視 index_0.html


1.2 以編輯器開啟 index_0.html，閱讀其中的程式:

    <script type="text/babel">

        function Clock(props) {
            return (
                <div>
                    <h1>Hello, world!</h1>
                    <h2>It is {props.date.toLocaleTimeString()}.</h2>
                </div>
            );
        }

        function tick() {
            ReactDOM.render(
                <Clock date={new Date()} />,
                document.getElementById('root')
            );
        }

        setInterval(tick, 1000);

    </script>


1.3 請想想看，如何才能單純寫成這樣:

    ReactDOM.render(
        <Clock />,
        document.getElementById('root')
    );

    那些 setInterval 與時間資料，通通都由 Clock 包辦，
    讓 Clock 元件的使用者，不必再關注那些細節。




2.  定義 state 屬性


2.1 找到「<script type="text/babel">」，將整段 script 改成這樣:

    <script type="text/babel">

        class Clock extends React.Component {
            constructor(props) {
                super(props);
                this.state = { date: new Date() };
            }

            render() {
                return (
                    <div>
                        <h1>Hello, world!</h1>
                        <h2>It is {this.state.date.toLocaleTimeString()}.</h2>
                    </div>
                );
            }
        }

        ReactDOM.render(
            <Clock />,
            document.getElementById('root')
        );

    </script>


2.2 存檔之後，在瀏覽器檢視作品。

    <Note> 目前還不會每秒更新時間。

    <Note> 請問：this.state 一定要命名為 this.state 嗎?


2.3 請重寫一遍，而非僅只是複製貼上。




3.  加入 LifeCycle 函式


3.1 在 constructor() 與 render() 之間，加入下列程式:

            componentDidMount() {
                this.timerId = setInterval( () => {
                    this.setState({ date: new Date() });
                }, 1000);
            }

            componentWillUnmount() {
                clearInterval(this.timerId);
            }


3.2 存檔之後，在瀏覽器檢視作品。

    <Note> 現在應該會每秒更新時間。

    <Note>
    請與講師/同學，討論一下 componentDidMount() 與 
    componentWillUnmount() 分別在什麼時機執行?


3.3 下列這行:
    this.setState({ date: new Date() });
    
    改成這樣:
    console.log(this.state.date);
    this.state.date = new Date();

    <Note>
    為何畫面無法更新?


3.4 setInterval 那邊，請問一定要箭頭函式的寫法嗎?


3.5 State 與 Props 有何不同?




4.  將 state 傳遞給內層/下層元件


4.1 在 <script type="text/babel"> 寫作一個新的元件，如下:

        function DisplayTime(props) {
            return <span>
                {props.date.toLocaleTimeString()}
            </span>;
        }


4.2 下列這行:
    <h2>It is {this.state.date.toLocaleTimeString()}.</h2>

    如何改成這樣:
    <h2>It is <DisplayTime date = {this.state.date} /> </h2>

    請問: DisplayTime 元件能抓到父階元件傳進來的日期資料嗎?

